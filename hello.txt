hello 
git add > para agregar al staging area, el limbo donde se mantendran
git commit > para que se suba al repositorio

usuario
git config --global user.name "NombreDeUsuario"
git config --global user.email "correoEjemplo@gmail.com"

git log NombreArchivo.txt > me mostrara la historia de los cambios que ha tenido el NombreArchivo

git show > mostrara las modifiaciones con que tuvo con la version anterior

git diff ID1.. ID2.. > con este vamos a ver las diferencias que tienen entre un commit y otro

##CAMBIAR EL NOMBRE DE UN ARCHIVO
# si queremos modificar y/o actualizar el nombre de un archivo podemos utilar el comando
git mv NombreActual NombreNuevo #Con eso git llevara un registro del cambio de nombre

##CORREGIR EL MENSAJE DEL COMMINT
# para este caso puedes utilizar el argumento --amend
git commit --amend -m "Mensaje corregido"   #Esto solo modifica el mensaje del ultimo commit

##TRABAJAR CON BRANCH, las ramas se crean apartir del commit donde te encuentres
#New Branch         
git branch BranchName
#Select some branch
git checkout BranchName

#Etiquetas
#Con este comando puede mostrarte un mini mapa para poder visualizar 
git log --all --graph --decorate --oneline

#se pueden asignar comando completos a un solo alias
alias arbolito="git log --all --graph --decorate --oneline"

#PARA HACER ETIQUTAS DE VERSIONES
git tag -a (nombre) -m "mensaje para hacer mencion" (HashDelCommit)

#Para conocer las etiquetas que se han hecho
git tag

#Para borrar un tag
git tag -d (nombreTag)

#Para borrar un tag tambien en gitHub
git push origin :refs/tags/(nombre)

#Para cargar los tags
git push origin --tags

#Vamos a psar las ramas a los repositorios de gitHub

#
git checkout  

#podremos ver nustras branch con
git show-branch

#Se hace una forma mas visual de ver los cambios en las diferentes ramas
gitk 

#para hacer un push de la rama al repositorio
    primero se hacer un pull del repositorio   
    git pull origin main
    git checkout '(rama a la que vas a mover)'
    git push origin (rama a la que te cambiaste)